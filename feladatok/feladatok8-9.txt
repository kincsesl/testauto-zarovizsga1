## 8 Feladat: Bowling eredménylap

Készíts egy Python python applikációt (egy darab python file) ami selenium-ot használ.

A program töltse be a Bowling eredménylap app-ot az [https://witty-hill-0acfceb03.azurestaticapps.net/bowling-scorecard.html](https://witty-hill-0acfceb03.azurestaticapps.net/bowling-scorecard.html) oldalról.

Feladatod, hogy automatizáld selenium webdriverrel az alábbi funkcionalitásokat a Bowling eredménylap appban:

Az ellenőrzésekhez használj `pytest` keretrendszert. A tesztjeidben használj `assert` összehasonlításokat használj!

* Helyes jelenik meg az üres eredmény kártya:
    * mind a 10 guritási mező üres
    * mind a 10 összegző mező üres

* Helyes grurítások adminisztrációja jól működik
    * gurítsunk sorrendben: 0,1,2,3,4,5,6,0,7,0,8,0,9,0,9,1,10,10,0,0
    * ellenőrizzük, hogy ezek a gruítások szerepelnek: [(0,1),(2,3),(4,5),(6,0),(7,0),(8,0),(9,0),(X),(X),(0,0)]
    * ellenőrizzük, hogy ezek az összegek szerepelnek: [1,6,15,21,28,36,45,55,65,75]

* Nem lehet egyszerre 11 bábút gurítani:
    * gurítsunk: 6, majd 5 bábút
    * ellezőrizzük, hogy a hibaüzenet ezt írja-e: `Invalid Roll - there are only ten pins!`

### A megoldás beadása
* a megoldásokat a `testproject` mappába tedd, `bowling.py`
* a lokálisan kidolgozott megoldásokat előbb commitold `git commit`
* majd ne felejtsd el `git push` segítségével a Github szerverre is felküldeni
* ne felejtsd el, hogy pontokat ér a szintaktikai legjobb praktikák megvalósítása (`ctlr`+`alt`+`l`)
* akkor is add be megodásod, ha nem vagy benne biztos, mert részpontokat ér mindennemű a tárgyhoz kötődő kód beadása
* a megodás fájlba írjál kommentet amiben elmagyarázod, hogy mit akartál csinálni. Ne vidd túlzásba, de ne is legyen komment nélkül leadott fájlod.
* nem beadott vagy üres fálj formájában beadott feladat megoldás `0` pontot ér :(

## 9 Feladat: Találd ki a filmet

Készíts egy Python python applikációt (egy darab python file) ami selenium-ot használ.

A program töltse be a Találd ki a filmet app-ot az [https://witty-hill-0acfceb03.azurestaticapps.net/imdb_guessmovie.html](https://witty-hill-0acfceb03.azurestaticapps.net/imdb_guessmovie.html) oldalról.

Feladatod, hogy automatizáld selenium webdriverrel az alábbi funkcionalitásokat a Találd ki a filmet appban:

Az ellenőrzésekhez használj `pytest` keretrendszert. A tesztjeidben használj `assert` összehasonlításokat használj!

* Helyes jelenik meg az applikáció:
    * minden strike gomb zöld
    * egy gomb sincs lenyomva

* Helyesen működik us filem-re az applikáció
    * Tallágassunk és végig ellenőrizzük, hogy a megfelelő karakterek jelennek-e
    * Ha kitaláljuk 4 találgatásból, akkor jó üzenet jelenik-e meg.

* Helytelenül találgatunk akkor működik-e az applikáció:
    * Tallágassunk és végig ellenőrizzük, hogy a megfelelő karakterek jelennek-e
    * Most ne találjuk el 4 találgatásból, akkor jó üzenet jelenik-e meg.

### A megoldás beadása
* a megoldásokat a `testproject` mappába tedd, `imdb.py`
* a lokálisan kidolgozott megoldásokat előbb commitold `git commit`
* majd ne felejtsd el `git push` segítségével a Github szerverre is felküldeni
* ne felejtsd el, hogy pontokat ér a szintaktikai legjobb praktikák megvalósítása (`ctlr`+`alt`+`l`)
* akkor is add be megodásod, ha nem vagy benne biztos, mert részpontokat ér mindennemű a tárgyhoz kötődő kód beadása
* a megodás fájlba írjál kommentet amiben elmagyarázod, hogy mit akartál csinálni. Ne vidd túlzásba, de ne is legyen komment nélkül leadott fájlod.
* nem beadott vagy üres fálj formájában beadott feladat megoldás `0` pontot ér :(